SHELL=/bin/sh

netio: makefile debug.o error.o timer.o signals.o netio.o help.o params.o mkserver.o mkclient.o io.o servers.o clients.o net.o cp.o mainloop.o set.o run.o collision.o makefile
	gcc error.o debug.o timer.o signals.o netio.o help.o params.o mkserver.o mkclient.o io.o servers.o clients.o net.o cp.o mainloop.o set.o run.o collision.o -lrt -o netio

clean:
	rm -f *.o netio
	rm -rf man/man1

distclean:
	rm -f *.o netio
	rm -rf man/man1
	rm -f *.gz *.bz2
	rm -f makefile

install: netio man
	cp netio /usr/bin
	cp man/man1/netio.1.bz2 /usr/share/man/man1

uninstall:
	rm -f /usr/bin/netio
	rm -f /usr/man/man1/netio.1.bz2

dist: netio.tar.gz netio.tar.bz2

netio.tar.gz: *.c *.h man/* configure makefile.def
	tar --gzip -cf netio.tar.gz *.c *.h man/* configure makefile.def

netio.tar.bz2: *.c *.h man/* configure makefile.def
	tar --bzip2 -cf netio.tar.bz2  *.c *.h man/* configure makefile.def

man: man/man1/netio.1.bz2

man/man1/netio.1.bz2: man/man.1.en
	mkdir -p man/man1
	bzip2 -zkc --best man/man.1.en >man/man1/netio.1.bz2

netio.o: makefile netio.c netio.h
	gcc $(OPT) -c netio.c -o netio.o

help.o: makefile help.c help.h
	gcc $(OPT) -c help.c -o help.o

params.o: makefile params.c params.h
	gcc $(OPT) -c params.c -o params.o

mkserver.o: makefile mkserver.c mkserver.h
	gcc $(OPT) -c mkserver.c -o mkserver.o

mkclient.o: makefile mkclient.c mkclient.h
	gcc $(OPT) -c mkclient.c -o mkclient.o

servers.o: makefile servers.c servers.h
	gcc $(OPT) -c servers.c -o servers.o

clients.o: makefile clients.c clients.h
	gcc $(OPT) -c clients.c -o clients.o

net.o: makefile net.c net.h
	gcc $(OPT) -c net.c -o net.o

cp.o: makefile cp.c cp.h
	gcc $(OPT) -c cp.c -o cp.o

io.o: makefile io.c io.h
	gcc $(OPT) -c io.c -o io.o

mainloop.o: makefile mainloop.c mainloop.h
	gcc $(OPT) -c mainloop.c -o mainloop.o

set.o: makefile set.c set.h
	gcc $(OPT) -c set.c -o set.o

run.o: makefile run.c run.h
	gcc $(OPT) -c run.c -o run.o

collision.o: makefile collision.c collision.h
	gcc $(OPT) -c collision.c -o collision.o

signals.o: makefile signals.c signals.h
	gcc $(OPT) -c signals.c -o signals.o

timer.o: makefile timer.c timer.h
	gcc $(OPT) -c timer.c -o timer.o

error.o: makefile error.c error.h
	gcc $(OPT) -c error.c -o error.o

